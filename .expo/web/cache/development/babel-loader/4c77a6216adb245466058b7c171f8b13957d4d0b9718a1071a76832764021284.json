{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { toCalendarDate as $7UzoM$toCalendarDate, toCalendarDateTime as $7UzoM$toCalendarDateTime, DateFormatter as $7UzoM$DateFormatter, Time as $7UzoM$Time, toCalendar as $7UzoM$toCalendar, now as $7UzoM$now, GregorianCalendar as $7UzoM$GregorianCalendar, getMinimumMonthInYear as $7UzoM$getMinimumMonthInYear, getMinimumDayInMonth as $7UzoM$getMinimumDayInMonth, toZoned as $7UzoM$toZoned, toTime as $7UzoM$toTime, today as $7UzoM$today, getLocalTimeZone as $7UzoM$getLocalTimeZone } from \"@internationalized/date\";\nimport { useOverlayTriggerState as $7UzoM$useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useControlledState as $7UzoM$useControlledState } from \"@react-stately/utils\";\nimport { useState as $7UzoM$useState, useMemo as $7UzoM$useMemo, useRef as $7UzoM$useRef, useEffect as $7UzoM$useEffect } from \"react\";\nimport { LocalizedStringDictionary as $7UzoM$LocalizedStringDictionary } from \"@internationalized/string\";\nfunction $35a22f14a1f04b11$export$eac50920cf2fd59a(value, minValue, maxValue) {\n  return value != null && (minValue != null && value.compare(minValue) < 0 || maxValue != null && value.compare(maxValue) > 0);\n}\nvar $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS = {\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"2-digit\",\n  second: \"2-digit\"\n};\nvar $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\"\n};\nfunction $35a22f14a1f04b11$export$7e319ea407e63bc0(fieldOptions, options) {\n  var defaultFieldOptions = options.shouldForceLeadingZeros ? $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS : $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS;\n  fieldOptions = _objectSpread(_objectSpread({}, defaultFieldOptions), fieldOptions);\n  var granularity = options.granularity || \"minute\";\n  var keys = Object.keys(fieldOptions);\n  var _options_maxGranularity;\n  var startIdx = keys.indexOf((_options_maxGranularity = options.maxGranularity) !== null && _options_maxGranularity !== void 0 ? _options_maxGranularity : \"year\");\n  if (startIdx < 0) startIdx = 0;\n  var endIdx = keys.indexOf(granularity);\n  if (endIdx < 0) endIdx = 2;\n  if (startIdx > endIdx) throw new Error(\"maxGranularity must be greater than granularity\");\n  var opts = keys.slice(startIdx, endIdx + 1).reduce(function (opts, key) {\n    opts[key] = fieldOptions[key];\n    return opts;\n  }, {});\n  if (options.hourCycle != null) opts.hour12 = options.hourCycle === 12;\n  opts.timeZone = options.timeZone || \"UTC\";\n  var hasTime = granularity === \"hour\" || granularity === \"minute\" || granularity === \"second\";\n  if (hasTime && options.timeZone && !options.hideTimeZone) opts.timeZoneName = \"short\";\n  if (options.showEra && startIdx === 0) opts.era = \"short\";\n  return opts;\n}\nfunction $35a22f14a1f04b11$export$c5221a78ef73c5e9(placeholderValue) {\n  if (placeholderValue && \"hour\" in placeholderValue) return placeholderValue;\n  return new (0, $7UzoM$Time)();\n}\nfunction $35a22f14a1f04b11$export$61a490a80c552550(value, calendar) {\n  if (value === null) return null;\n  if (!value) return undefined;\n  return (0, $7UzoM$toCalendar)(value, calendar);\n}\nfunction $35a22f14a1f04b11$export$66aa2b09de4b1ea5(placeholderValue, granularity, calendar, timeZone) {\n  if (placeholderValue) return $35a22f14a1f04b11$export$61a490a80c552550(placeholderValue, calendar);\n  var date = (0, $7UzoM$toCalendar)((0, $7UzoM$now)(timeZone).set({\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  }), calendar);\n  if (granularity === \"year\" || granularity === \"month\" || granularity === \"day\") return (0, $7UzoM$toCalendarDate)(date);\n  if (!timeZone) return (0, $7UzoM$toCalendarDateTime)(date);\n  return date;\n}\nfunction $35a22f14a1f04b11$export$2440da353cedad43(v, granularity) {\n  var defaultTimeZone = v && \"timeZone\" in v ? v.timeZone : undefined;\n  var defaultGranularity = v && \"minute\" in v ? \"minute\" : \"day\";\n  if (v && granularity && !(granularity in v)) throw new Error(\"Invalid granularity \" + granularity + \" for value \" + v.toString());\n  var _ref = (0, $7UzoM$useState)([defaultGranularity, defaultTimeZone]),\n    _ref2 = _slicedToArray(_ref, 2),\n    lastValue = _ref2[0],\n    setLastValue = _ref2[1];\n  if (v && (lastValue[0] !== defaultGranularity || lastValue[1] !== defaultTimeZone)) setLastValue([defaultGranularity, defaultTimeZone]);\n  if (!granularity) granularity = v ? defaultGranularity : lastValue[0];\n  var timeZone = v ? defaultTimeZone : lastValue[1];\n  return [granularity, timeZone];\n}\nfunction $ab5bf3f618090389$export$87194bb378cc3ac2(props) {\n  var _props_isDateUnavailable;\n  var overlayState = (0, $7UzoM$useOverlayTriggerState)(props);\n  var _ref3 = (0, $7UzoM$useControlledState)(props.value, props.defaultValue || null, props.onChange),\n    _ref4 = _slicedToArray(_ref3, 2),\n    value = _ref4[0],\n    setValue = _ref4[1];\n  var v = value || props.placeholderValue;\n  var _ref5 = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity),\n    _ref6 = _slicedToArray(_ref5, 2),\n    granularity = _ref6[0],\n    defaultTimeZone = _ref6[1];\n  var dateValue = value != null ? value.toDate(defaultTimeZone !== null && defaultTimeZone !== void 0 ? defaultTimeZone : \"UTC\") : null;\n  var hasTime = granularity === \"hour\" || granularity === \"minute\" || granularity === \"second\";\n  var _props_shouldCloseOnSelect;\n  var shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;\n  var _ref7 = (0, $7UzoM$useState)(null),\n    _ref8 = _slicedToArray(_ref7, 2),\n    selectedDate = _ref8[0],\n    setSelectedDate = _ref8[1];\n  var _ref9 = (0, $7UzoM$useState)(null),\n    _ref10 = _slicedToArray(_ref9, 2),\n    selectedTime = _ref10[0],\n    setSelectedTime = _ref10[1];\n  if (value) {\n    selectedDate = value;\n    if (\"hour\" in value) selectedTime = value;\n  }\n  if (v && !(granularity in v)) throw new Error(\"Invalid granularity \" + granularity + \" for value \" + v.toString());\n  var commitValue = function commitValue(date, time) {\n    setValue(\"timeZone\" in time ? time.set((0, $7UzoM$toCalendarDate)(date)) : (0, $7UzoM$toCalendarDateTime)(date, time));\n    setSelectedDate(null);\n    setSelectedTime(null);\n  };\n  var selectDate = function selectDate(newValue) {\n    var shouldClose = typeof shouldCloseOnSelect === \"function\" ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (selectedTime || shouldClose) commitValue(newValue, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));else setSelectedDate(newValue);\n    } else setValue(newValue);\n    if (shouldClose) overlayState.setOpen(false);\n  };\n  var selectTime = function selectTime(newValue) {\n    if (selectedDate && newValue) commitValue(selectedDate, newValue);else setSelectedTime(newValue);\n  };\n  var isValueInvalid = props.isInvalid || props.validationState === \"invalid\" || (0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value, props.minValue, props.maxValue) || value && ((_props_isDateUnavailable = props.isDateUnavailable) === null || _props_isDateUnavailable === void 0 ? void 0 : _props_isDateUnavailable.call(props, value));\n  var validationState = props.validationState || (isValueInvalid ? \"invalid\" : null);\n  return _objectSpread(_objectSpread({\n    value: value,\n    setValue: setValue,\n    dateValue: selectedDate,\n    timeValue: selectedTime,\n    setDateValue: selectDate,\n    setTimeValue: selectTime,\n    granularity: granularity,\n    hasTime: hasTime\n  }, overlayState), {}, {\n    setOpen: function setOpen(isOpen) {\n      if (!isOpen && !value && selectedDate && hasTime) commitValue(selectedDate, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));\n      overlayState.setOpen(isOpen);\n    },\n    validationState: validationState,\n    isInvalid: isValueInvalid,\n    formatValue: function formatValue(locale, fieldOptions) {\n      if (!dateValue) return \"\";\n      var formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {\n        granularity: granularity,\n        timeZone: defaultTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: value.calendar.identifier === \"gregory\" && value.era === \"BC\"\n      });\n      var formatter = new (0, $7UzoM$DateFormatter)(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  });\n}\nvar $3e3ed55ab2966714$var$placeholders = new (0, $7UzoM$LocalizedStringDictionary)({\n  ach: {\n    year: \"mwaka\",\n    month: \"dwe\",\n    day: \"nino\"\n  },\n  af: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  am: {\n    year: \"ዓዓዓዓ\",\n    month: \"ሚሜ\",\n    day: \"ቀቀ\"\n  },\n  an: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  ar: {\n    year: \"سنة\",\n    month: \"شهر\",\n    day: \"يوم\"\n  },\n  ast: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  az: {\n    year: \"iiii\",\n    month: \"aa\",\n    day: \"gg\"\n  },\n  be: {\n    year: \"гггг\",\n    month: \"мм\",\n    day: \"дд\"\n  },\n  bg: {\n    year: \"гггг\",\n    month: \"мм\",\n    day: \"дд\"\n  },\n  bn: {\n    year: \"yyyy\",\n    month: \"মিমি\",\n    day: \"dd\"\n  },\n  br: {\n    year: \"bbbb\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  bs: {\n    year: \"gggg\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  ca: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  cak: {\n    year: \"jjjj\",\n    month: \"ii\",\n    day: \"q'q'\"\n  },\n  ckb: {\n    year: \"ساڵ\",\n    month: \"مانگ\",\n    day: \"ڕۆژ\"\n  },\n  cs: {\n    year: \"rrrr\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  cy: {\n    year: \"bbbb\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  da: {\n    year: \"\\xe5\\xe5\\xe5\\xe5\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  de: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"tt\"\n  },\n  dsb: {\n    year: \"llll\",\n    month: \"mm\",\n    day: \"źź\"\n  },\n  el: {\n    year: \"εεεε\",\n    month: \"μμ\",\n    day: \"ηη\"\n  },\n  en: {\n    year: \"yyyy\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  eo: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"tt\"\n  },\n  es: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  et: {\n    year: \"aaaa\",\n    month: \"kk\",\n    day: \"pp\"\n  },\n  eu: {\n    year: \"uuuu\",\n    month: \"hh\",\n    day: \"ee\"\n  },\n  fa: {\n    year: \"سال\",\n    month: \"ماه\",\n    day: \"روز\"\n  },\n  ff: {\n    year: \"hhhh\",\n    month: \"ll\",\n    day: \"\\xf1\\xf1\"\n  },\n  fi: {\n    year: \"vvvv\",\n    month: \"kk\",\n    day: \"pp\"\n  },\n  fr: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"jj\"\n  },\n  fy: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  ga: {\n    year: \"bbbb\",\n    month: \"mm\",\n    day: \"ll\"\n  },\n  gd: {\n    year: \"bbbb\",\n    month: \"mm\",\n    day: \"ll\"\n  },\n  gl: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  he: {\n    year: \"שנה\",\n    month: \"חודש\",\n    day: \"יום\"\n  },\n  hr: {\n    year: \"gggg\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  hsb: {\n    year: \"llll\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  hu: {\n    year: \"\\xe9\\xe9\\xe9\\xe9\",\n    month: \"hh\",\n    day: \"nn\"\n  },\n  ia: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  id: {\n    year: \"tttt\",\n    month: \"bb\",\n    day: \"hh\"\n  },\n  it: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"gg\"\n  },\n  ja: {\n    year: \" 年 \",\n    month: \"月\",\n    day: \"日\"\n  },\n  ka: {\n    year: \"წწწწ\",\n    month: \"თთ\",\n    day: \"რრ\"\n  },\n  kk: {\n    year: \"жжжж\",\n    month: \"аа\",\n    day: \"кк\"\n  },\n  kn: {\n    year: \"ವವವವ\",\n    month: \"ಮಿಮೀ\",\n    day: \"ದಿದಿ\"\n  },\n  ko: {\n    year: \"연도\",\n    month: \"월\",\n    day: \"일\"\n  },\n  lb: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  lo: {\n    year: \"ປປປປ\",\n    month: \"ດດ\",\n    day: \"ວວ\"\n  },\n  lt: {\n    year: \"mmmm\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  lv: {\n    year: \"gggg\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  meh: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  ml: {\n    year: \"വർഷം\",\n    month: \"മാസം\",\n    day: \"തീയതി\"\n  },\n  ms: {\n    year: \"tttt\",\n    month: \"mm\",\n    day: \"hh\"\n  },\n  nl: {\n    year: \"jjjj\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  nn: {\n    year: \"\\xe5\\xe5\\xe5\\xe5\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  no: {\n    year: \"\\xe5\\xe5\\xe5\\xe5\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  oc: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"jj\"\n  },\n  pl: {\n    year: \"rrrr\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  pt: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  rm: {\n    year: \"oooo\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  ro: {\n    year: \"aaaa\",\n    month: \"ll\",\n    day: \"zz\"\n  },\n  ru: {\n    year: \"гггг\",\n    month: \"мм\",\n    day: \"дд\"\n  },\n  sc: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  scn: {\n    year: \"aaaa\",\n    month: \"mm\",\n    day: \"jj\"\n  },\n  sk: {\n    year: \"rrrr\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  sl: {\n    year: \"llll\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  sr: {\n    year: \"гггг\",\n    month: \"мм\",\n    day: \"дд\"\n  },\n  sv: {\n    year: \"\\xe5\\xe5\\xe5\\xe5\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  szl: {\n    year: \"rrrr\",\n    month: \"mm\",\n    day: \"dd\"\n  },\n  tg: {\n    year: \"сссс\",\n    month: \"мм\",\n    day: \"рр\"\n  },\n  th: {\n    year: \"ปปปป\",\n    month: \"ดด\",\n    day: \"วว\"\n  },\n  tr: {\n    year: \"yyyy\",\n    month: \"aa\",\n    day: \"gg\"\n  },\n  uk: {\n    year: \"рррр\",\n    month: \"мм\",\n    day: \"дд\"\n  },\n  \"zh-CN\": {\n    year: \"年\",\n    month: \"月\",\n    day: \"日\"\n  },\n  \"zh-TW\": {\n    year: \"年\",\n    month: \"月\",\n    day: \"日\"\n  }\n}, \"en\");\nfunction $3e3ed55ab2966714$export$d3f5c5e0a5023fa0(field, value, locale) {\n  if (field === \"era\" || field === \"dayPeriod\") return value;\n  if (field === \"year\" || field === \"month\" || field === \"day\") return $3e3ed55ab2966714$var$placeholders.getStringForLocale(field, locale);\n  return \"––\";\n}\nvar $3c0fc76039f1c516$var$EDITABLE_SEGMENTS = {\n  year: true,\n  month: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true,\n  dayPeriod: true,\n  era: true\n};\nvar $3c0fc76039f1c516$var$PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15\n};\nvar $3c0fc76039f1c516$var$TYPE_MAPPING = {\n  dayperiod: \"dayPeriod\"\n};\nfunction $3c0fc76039f1c516$export$60e84778edff6d26(props) {\n  var locale = props.locale,\n    createCalendar = props.createCalendar,\n    hideTimeZone = props.hideTimeZone,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    isRequired = props.isRequired;\n  var v = props.value || props.defaultValue || props.placeholderValue;\n  var _ref11 = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity),\n    _ref12 = _slicedToArray(_ref11, 2),\n    granularity = _ref12[0],\n    defaultTimeZone = _ref12[1];\n  var timeZone = defaultTimeZone || \"UTC\";\n  if (v && !(granularity in v)) throw new Error(\"Invalid granularity \" + granularity + \" for value \" + v.toString());\n  var defaultFormatter = (0, $7UzoM$useMemo)(function () {\n    return new (0, $7UzoM$DateFormatter)(locale);\n  }, [locale]);\n  var calendar = (0, $7UzoM$useMemo)(function () {\n    return createCalendar(defaultFormatter.resolvedOptions().calendar);\n  }, [createCalendar, defaultFormatter]);\n  var _ref13 = (0, $7UzoM$useControlledState)(props.value, props.defaultValue, props.onChange),\n    _ref14 = _slicedToArray(_ref13, 2),\n    value = _ref14[0],\n    setDate = _ref14[1];\n  var calendarValue = (0, $7UzoM$useMemo)(function () {\n    return (0, $35a22f14a1f04b11$export$61a490a80c552550)(value, calendar);\n  }, [value, calendar]);\n  var _ref15 = (0, $7UzoM$useState)(function () {\n      return (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);\n    }),\n    _ref16 = _slicedToArray(_ref15, 2),\n    placeholderDate = _ref16[0],\n    setPlaceholderDate = _ref16[1];\n  var val = calendarValue || placeholderDate;\n  var showEra = calendar.identifier === \"gregory\" && val.era === \"BC\";\n  var _props_maxGranularity;\n  var formatOpts = (0, $7UzoM$useMemo)(function () {\n    return {\n      granularity: granularity,\n      maxGranularity: (_props_maxGranularity = props.maxGranularity) !== null && _props_maxGranularity !== void 0 ? _props_maxGranularity : \"year\",\n      timeZone: defaultTimeZone,\n      hideTimeZone: hideTimeZone,\n      hourCycle: props.hourCycle,\n      showEra: showEra,\n      shouldForceLeadingZeros: props.shouldForceLeadingZeros\n    };\n  }, [props.maxGranularity, granularity, props.hourCycle, props.shouldForceLeadingZeros, defaultTimeZone, hideTimeZone, showEra]);\n  var opts = (0, $7UzoM$useMemo)(function () {\n    return (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, formatOpts);\n  }, [formatOpts]);\n  var dateFormatter = (0, $7UzoM$useMemo)(function () {\n    return new (0, $7UzoM$DateFormatter)(locale, opts);\n  }, [locale, opts]);\n  var resolvedOptions = (0, $7UzoM$useMemo)(function () {\n    return dateFormatter.resolvedOptions();\n  }, [dateFormatter]);\n  var allSegments = (0, $7UzoM$useMemo)(function () {\n    return dateFormatter.formatToParts(new Date()).filter(function (seg) {\n      return $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[seg.type];\n    }).reduce(function (p, seg) {\n      return p[seg.type] = true, p;\n    }, {});\n  }, [dateFormatter]);\n  var _ref17 = (0, $7UzoM$useState)(function () {\n      return props.value || props.defaultValue ? _objectSpread({}, allSegments) : {};\n    }),\n    _ref18 = _slicedToArray(_ref17, 2),\n    validSegments = _ref18[0],\n    setValidSegments = _ref18[1];\n  var clearedSegment = (0, $7UzoM$useRef)();\n  var lastCalendarIdentifier = (0, $7UzoM$useRef)(calendar.identifier);\n  (0, $7UzoM$useEffect)(function () {\n    if (calendar.identifier !== lastCalendarIdentifier.current) {\n      lastCalendarIdentifier.current = calendar.identifier;\n      setPlaceholderDate(function (placeholder) {\n        return Object.keys(validSegments).length > 0 ? (0, $7UzoM$toCalendar)(placeholder, calendar) : (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);\n      });\n    }\n  }, [calendar, granularity, validSegments, defaultTimeZone, props.placeholderValue]);\n  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {\n    validSegments = _objectSpread({}, allSegments);\n    setValidSegments(validSegments);\n  }\n  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {\n    validSegments = {};\n    setValidSegments(validSegments);\n    setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));\n  }\n  var displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;\n  var setValue = function setValue(newValue) {\n    if (props.isDisabled || props.isReadOnly) return;\n    var validKeys = Object.keys(validSegments);\n    var allKeys = Object.keys(allSegments);\n    if (newValue == null) {\n      setDate(null);\n      setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));\n      setValidSegments({});\n    } else if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod && clearedSegment.current !== \"dayPeriod\") {\n      newValue = (0, $7UzoM$toCalendar)(newValue, (v === null || v === void 0 ? void 0 : v.calendar) || new (0, $7UzoM$GregorianCalendar)());\n      setDate(newValue);\n    } else setPlaceholderDate(newValue);\n    clearedSegment.current = null;\n  };\n  var dateValue = (0, $7UzoM$useMemo)(function () {\n    return displayValue.toDate(timeZone);\n  }, [displayValue, timeZone]);\n  var segments = (0, $7UzoM$useMemo)(function () {\n    return dateFormatter.formatToParts(dateValue).map(function (segment) {\n      var isEditable = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type];\n      if (segment.type === \"era\" && calendar.getEras().length === 1) isEditable = false;\n      var isPlaceholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type];\n      var placeholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] ? (0, $3e3ed55ab2966714$export$d3f5c5e0a5023fa0)(segment.type, segment.value, locale) : null;\n      return _objectSpread(_objectSpread({\n        type: $3c0fc76039f1c516$var$TYPE_MAPPING[segment.type] || segment.type,\n        text: isPlaceholder ? placeholder : segment.value\n      }, $3c0fc76039f1c516$var$getSegmentLimits(displayValue, segment.type, resolvedOptions)), {}, {\n        isPlaceholder: isPlaceholder,\n        placeholder: placeholder,\n        isEditable: isEditable\n      });\n    });\n  }, [dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar, locale]);\n  if (allSegments.era && validSegments.year && !validSegments.era) {\n    validSegments.era = true;\n    setValidSegments(_objectSpread({}, validSegments));\n  } else if (!allSegments.era && validSegments.era) {\n    delete validSegments.era;\n    setValidSegments(_objectSpread({}, validSegments));\n  }\n  var markValid = function markValid(part) {\n    validSegments[part] = true;\n    if (part === \"year\" && allSegments.era) validSegments.era = true;\n    setValidSegments(_objectSpread({}, validSegments));\n  };\n  var adjustSegment = function adjustSegment(type, amount) {\n    if (!validSegments[type]) {\n      markValid(type);\n      var validKeys = Object.keys(validSegments);\n      var allKeys = Object.keys(allSegments);\n      if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) setValue(displayValue);\n    } else setValue($3c0fc76039f1c516$var$addSegment(displayValue, type, amount, resolvedOptions));\n  };\n  var isValueInvalid = props.isInvalid || props.validationState === \"invalid\" || (0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(calendarValue, props.minValue, props.maxValue);\n  var validationState = props.validationState || (isValueInvalid ? \"invalid\" : null);\n  var _props_maxGranularity1;\n  return {\n    value: calendarValue,\n    dateValue: dateValue,\n    calendar: calendar,\n    setValue: setValue,\n    segments: segments,\n    dateFormatter: dateFormatter,\n    validationState: validationState,\n    isInvalid: isValueInvalid,\n    granularity: granularity,\n    maxGranularity: (_props_maxGranularity1 = props.maxGranularity) !== null && _props_maxGranularity1 !== void 0 ? _props_maxGranularity1 : \"year\",\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    increment: function increment(part) {\n      adjustSegment(part, 1);\n    },\n    decrement: function decrement(part) {\n      adjustSegment(part, -1);\n    },\n    incrementPage: function incrementPage(part) {\n      adjustSegment(part, $3c0fc76039f1c516$var$PAGE_STEP[part] || 1);\n    },\n    decrementPage: function decrementPage(part) {\n      adjustSegment(part, -($3c0fc76039f1c516$var$PAGE_STEP[part] || 1));\n    },\n    setSegment: function setSegment(part, v) {\n      markValid(part);\n      setValue($3c0fc76039f1c516$var$setSegment(displayValue, part, v, resolvedOptions));\n    },\n    confirmPlaceholder: function confirmPlaceholder() {\n      if (props.isDisabled || props.isReadOnly) return;\n      var validKeys = Object.keys(validSegments);\n      var allKeys = Object.keys(allSegments);\n      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {\n        validSegments = _objectSpread({}, allSegments);\n        setValidSegments(validSegments);\n        setValue(displayValue.copy());\n      }\n    },\n    clearSegment: function clearSegment(part) {\n      delete validSegments[part];\n      clearedSegment.current = part;\n      setValidSegments(_objectSpread({}, validSegments));\n      var placeholder = (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);\n      var value = displayValue;\n      if (part === \"dayPeriod\" && \"hour\" in displayValue && \"hour\" in placeholder) {\n        var isPM = displayValue.hour >= 12;\n        var shouldBePM = placeholder.hour >= 12;\n        if (isPM && !shouldBePM) value = displayValue.set({\n          hour: displayValue.hour - 12\n        });else if (!isPM && shouldBePM) value = displayValue.set({\n          hour: displayValue.hour + 12\n        });\n      } else if (part in displayValue) value = displayValue.set(_defineProperty({}, part, placeholder[part]));\n      setDate(null);\n      setValue(value);\n    },\n    formatValue: function formatValue(fieldOptions) {\n      if (!calendarValue) return \"\";\n      var formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);\n      var formatter = new (0, $7UzoM$DateFormatter)(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\nfunction $3c0fc76039f1c516$var$getSegmentLimits(date, type, options) {\n  switch (type) {\n    case \"era\":\n      {\n        var eras = date.calendar.getEras();\n        return {\n          value: eras.indexOf(date.era),\n          minValue: 0,\n          maxValue: eras.length - 1\n        };\n      }\n    case \"year\":\n      return {\n        value: date.year,\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date)\n      };\n    case \"month\":\n      return {\n        value: date.month,\n        minValue: (0, $7UzoM$getMinimumMonthInYear)(date),\n        maxValue: date.calendar.getMonthsInYear(date)\n      };\n    case \"day\":\n      return {\n        value: date.day,\n        minValue: (0, $7UzoM$getMinimumDayInMonth)(date),\n        maxValue: date.calendar.getDaysInMonth(date)\n      };\n  }\n  if (\"hour\" in date) switch (type) {\n    case \"dayPeriod\":\n      return {\n        value: date.hour >= 12 ? 12 : 0,\n        minValue: 0,\n        maxValue: 12\n      };\n    case \"hour\":\n      if (options.hour12) {\n        var isPM = date.hour >= 12;\n        return {\n          value: date.hour,\n          minValue: isPM ? 12 : 0,\n          maxValue: isPM ? 23 : 11\n        };\n      }\n      return {\n        value: date.hour,\n        minValue: 0,\n        maxValue: 23\n      };\n    case \"minute\":\n      return {\n        value: date.minute,\n        minValue: 0,\n        maxValue: 59\n      };\n    case \"second\":\n      return {\n        value: date.second,\n        minValue: 0,\n        maxValue: 59\n      };\n  }\n  return {};\n}\nfunction $3c0fc76039f1c516$var$addSegment(value, part, amount, options) {\n  switch (part) {\n    case \"era\":\n    case \"year\":\n    case \"month\":\n    case \"day\":\n      return value.cycle(part, amount, {\n        round: part === \"year\"\n      });\n  }\n  if (\"hour\" in value) switch (part) {\n    case \"dayPeriod\":\n      {\n        var hours = value.hour;\n        var isPM = hours >= 12;\n        return value.set({\n          hour: isPM ? hours - 12 : hours + 12\n        });\n      }\n    case \"hour\":\n    case \"minute\":\n    case \"second\":\n      return value.cycle(part, amount, {\n        round: part !== \"hour\",\n        hourCycle: options.hour12 ? 12 : 24\n      });\n  }\n}\nfunction $3c0fc76039f1c516$var$setSegment(value, part, segmentValue, options) {\n  switch (part) {\n    case \"day\":\n    case \"month\":\n    case \"year\":\n    case \"era\":\n      return value.set(_defineProperty({}, part, segmentValue));\n  }\n  if (\"hour\" in value) switch (part) {\n    case \"dayPeriod\":\n      {\n        var hours = value.hour;\n        var wasPM = hours >= 12;\n        var isPM = segmentValue >= 12;\n        if (isPM === wasPM) return value;\n        return value.set({\n          hour: wasPM ? hours - 12 : hours + 12\n        });\n      }\n    case \"hour\":\n      if (options.hour12) {\n        var _hours = value.hour;\n        var _wasPM = _hours >= 12;\n        if (!_wasPM && segmentValue === 12) segmentValue = 0;\n        if (_wasPM && segmentValue < 12) segmentValue += 12;\n      }\n    case \"minute\":\n    case \"second\":\n      return value.set(_defineProperty({}, part, segmentValue));\n  }\n}\nfunction $93c38a5e28be6249$export$e50a61c1de9f574(props) {\n  var _props_isDateUnavailable, _props_isDateUnavailable1;\n  var overlayState = (0, $7UzoM$useOverlayTriggerState)(props);\n  var _ref19 = (0, $7UzoM$useControlledState)(props.value, props.defaultValue || null, props.onChange),\n    _ref20 = _slicedToArray(_ref19, 2),\n    controlledValue = _ref20[0],\n    setControlledValue = _ref20[1];\n  var _ref21 = (0, $7UzoM$useState)(function () {\n      return controlledValue || {\n        start: null,\n        end: null\n      };\n    }),\n    _ref22 = _slicedToArray(_ref21, 2),\n    placeholderValue = _ref22[0],\n    setPlaceholderValue = _ref22[1];\n  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {\n    placeholderValue = {\n      start: null,\n      end: null\n    };\n    setPlaceholderValue(placeholderValue);\n  }\n  var value = controlledValue || placeholderValue;\n  var setValue = function setValue(value) {\n    setPlaceholderValue(value);\n    if ((value === null || value === void 0 ? void 0 : value.start) && value.end) setControlledValue(value);else setControlledValue(null);\n  };\n  var v = (value === null || value === void 0 ? void 0 : value.start) || (value === null || value === void 0 ? void 0 : value.end) || props.placeholderValue;\n  var _ref23 = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity),\n    _ref24 = _slicedToArray(_ref23, 1),\n    granularity = _ref24[0];\n  var hasTime = granularity === \"hour\" || granularity === \"minute\" || granularity === \"second\";\n  var _props_shouldCloseOnSelect;\n  var shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;\n  var _ref25 = (0, $7UzoM$useState)(null),\n    _ref26 = _slicedToArray(_ref25, 2),\n    dateRange = _ref26[0],\n    setSelectedDateRange = _ref26[1];\n  var _ref27 = (0, $7UzoM$useState)(null),\n    _ref28 = _slicedToArray(_ref27, 2),\n    timeRange = _ref28[0],\n    setSelectedTimeRange = _ref28[1];\n  if (value && value.start && value.end) {\n    dateRange = value;\n    if (\"hour\" in value.start) timeRange = value;\n  }\n  var commitValue = function commitValue(dateRange, timeRange) {\n    setValue({\n      start: \"timeZone\" in timeRange.start ? timeRange.start.set((0, $7UzoM$toCalendarDate)(dateRange.start)) : (0, $7UzoM$toCalendarDateTime)(dateRange.start, timeRange.start),\n      end: \"timeZone\" in timeRange.end ? timeRange.end.set((0, $7UzoM$toCalendarDate)(dateRange.end)) : (0, $7UzoM$toCalendarDateTime)(dateRange.end, timeRange.end)\n    });\n    setSelectedDateRange(null);\n    setSelectedTimeRange(null);\n  };\n  var setDateRange = function setDateRange(range) {\n    var shouldClose = typeof shouldCloseOnSelect === \"function\" ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (shouldClose || range.start && range.end && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end)) commitValue(range, {\n        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),\n        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)\n      });else setSelectedDateRange(range);\n    } else if (range.start && range.end) setValue(range);else setSelectedDateRange(range);\n    if (shouldClose) overlayState.setOpen(false);\n  };\n  var setTimeRange = function setTimeRange(range) {\n    if ((dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && range.start && range.end) commitValue(dateRange, range);else setSelectedTimeRange(range);\n  };\n  var isValueInvalid = props.isInvalid || props.validationState === \"invalid\" || value != null && ((0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value.start, props.minValue, props.maxValue) || (0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value.end, props.minValue, props.maxValue) || value.end != null && value.start != null && value.end.compare(value.start) < 0 || (value === null || value === void 0 ? void 0 : value.start) && ((_props_isDateUnavailable = props.isDateUnavailable) === null || _props_isDateUnavailable === void 0 ? void 0 : _props_isDateUnavailable.call(props, value.start)) || (value === null || value === void 0 ? void 0 : value.end) && ((_props_isDateUnavailable1 = props.isDateUnavailable) === null || _props_isDateUnavailable1 === void 0 ? void 0 : _props_isDateUnavailable1.call(props, value.end)));\n  var validationState = props.validationState || (isValueInvalid ? \"invalid\" : null);\n  return _objectSpread(_objectSpread({\n    value: value,\n    setValue: setValue,\n    dateRange: dateRange,\n    timeRange: timeRange,\n    granularity: granularity,\n    hasTime: hasTime,\n    setDate: function setDate(part, date) {\n      setDateRange(_objectSpread(_objectSpread({}, dateRange), {}, _defineProperty({}, part, date)));\n    },\n    setTime: function setTime(part, time) {\n      setTimeRange(_objectSpread(_objectSpread({}, timeRange), {}, _defineProperty({}, part, time)));\n    },\n    setDateTime: function setDateTime(part, dateTime) {\n      setValue(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, part, dateTime)));\n    },\n    setDateRange: setDateRange,\n    setTimeRange: setTimeRange\n  }, overlayState), {}, {\n    setOpen: function setOpen(isOpen) {\n      if (!isOpen && !((value === null || value === void 0 ? void 0 : value.start) && (value === null || value === void 0 ? void 0 : value.end)) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && hasTime) commitValue(dateRange, {\n        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),\n        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)\n      });\n      overlayState.setOpen(isOpen);\n    },\n    validationState: validationState,\n    isInvalid: isValueInvalid,\n    formatValue: function formatValue(locale, fieldOptions) {\n      if (!value || !value.start || !value.end) return null;\n      var startTimeZone = \"timeZone\" in value.start ? value.start.timeZone : undefined;\n      var startGranularity = props.granularity || (value.start && \"minute\" in value.start ? \"minute\" : \"day\");\n      var endTimeZone = \"timeZone\" in value.end ? value.end.timeZone : undefined;\n      var endGranularity = props.granularity || (value.end && \"minute\" in value.end ? \"minute\" : \"day\");\n      var startOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {\n        granularity: startGranularity,\n        timeZone: startTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: value.start.calendar.identifier === \"gregory\" && value.start.era === \"BC\" || value.end.calendar.identifier === \"gregory\" && value.end.era === \"BC\"\n      });\n      var startDate = value.start.toDate(startTimeZone || \"UTC\");\n      var endDate = value.end.toDate(endTimeZone || \"UTC\");\n      var startFormatter = new (0, $7UzoM$DateFormatter)(locale, startOptions);\n      var endFormatter;\n      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {\n        try {\n          var parts = startFormatter.formatRangeToParts(startDate, endDate);\n          var separatorIndex = -1;\n          for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part.source === \"shared\" && part.type === \"literal\") separatorIndex = i;else if (part.source === \"endRange\") break;\n          }\n          var start = \"\";\n          var end = \"\";\n          for (var _i = 0; _i < parts.length; _i++) {\n            if (_i < separatorIndex) start += parts[_i].value;else if (_i > separatorIndex) end += parts[_i].value;\n          }\n          return {\n            start: start,\n            end: end\n          };\n        } catch (e) {}\n        endFormatter = startFormatter;\n      } else {\n        var endOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {\n          granularity: endGranularity,\n          timeZone: endTimeZone,\n          hideTimeZone: props.hideTimeZone,\n          hourCycle: props.hourCycle\n        });\n        endFormatter = new (0, $7UzoM$DateFormatter)(locale, endOptions);\n      }\n      return {\n        start: startFormatter.format(startDate),\n        end: endFormatter.format(endDate)\n      };\n    }\n  });\n}\nfunction $eff5d8ee529ac4bb$export$fd53cef0cc796101(props) {\n  var _props$placeholderVal = props.placeholderValue,\n    placeholderValue = _props$placeholderVal === void 0 ? new (0, $7UzoM$Time)() : _props$placeholderVal,\n    minValue = props.minValue,\n    maxValue = props.maxValue,\n    granularity = props.granularity;\n  var _ref29 = (0, $7UzoM$useControlledState)(props.value, props.defaultValue, props.onChange),\n    _ref30 = _slicedToArray(_ref29, 2),\n    value = _ref30[0],\n    setValue = _ref30[1];\n  var v = value || placeholderValue;\n  var day = v && \"day\" in v ? v : undefined;\n  var defaultValueTimeZone = props.defaultValue && \"timeZone\" in props.defaultValue ? props.defaultValue.timeZone : undefined;\n  var placeholderDate = (0, $7UzoM$useMemo)(function () {\n    var valueTimeZone = v && \"timeZone\" in v ? v.timeZone : undefined;\n    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? (0, $7UzoM$toZoned)($eff5d8ee529ac4bb$var$convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : $eff5d8ee529ac4bb$var$convertValue(placeholderValue);\n  }, [placeholderValue, v, defaultValueTimeZone]);\n  var minDate = (0, $7UzoM$useMemo)(function () {\n    return $eff5d8ee529ac4bb$var$convertValue(minValue, day);\n  }, [minValue, day]);\n  var maxDate = (0, $7UzoM$useMemo)(function () {\n    return $eff5d8ee529ac4bb$var$convertValue(maxValue, day);\n  }, [maxValue, day]);\n  var timeValue = (0, $7UzoM$useMemo)(function () {\n    return value && \"day\" in value ? (0, $7UzoM$toTime)(value) : value;\n  }, [value]);\n  var dateTime = (0, $7UzoM$useMemo)(function () {\n    return value == null ? null : $eff5d8ee529ac4bb$var$convertValue(value);\n  }, [value]);\n  var onChange = function onChange(newValue) {\n    setValue(day || defaultValueTimeZone ? newValue : newValue && (0, $7UzoM$toTime)(newValue));\n  };\n  var state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)(_objectSpread(_objectSpread({}, props), {}, {\n    value: dateTime,\n    defaultValue: undefined,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange: onChange,\n    granularity: granularity || \"minute\",\n    maxGranularity: \"hour\",\n    placeholderValue: placeholderDate,\n    createCalendar: function createCalendar() {\n      return new (0, $7UzoM$GregorianCalendar)();\n    }\n  }));\n  return _objectSpread(_objectSpread({}, state), {}, {\n    timeValue: timeValue\n  });\n}\nfunction $eff5d8ee529ac4bb$var$convertValue(value) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, $7UzoM$today)((0, $7UzoM$getLocalTimeZone)());\n  if (!value) return null;\n  if (\"day\" in value) return value;\n  return (0, $7UzoM$toCalendarDateTime)(date, value);\n}\nexport { $ab5bf3f618090389$export$87194bb378cc3ac2 as useDatePickerState, $3c0fc76039f1c516$export$60e84778edff6d26 as useDateFieldState, $93c38a5e28be6249$export$e50a61c1de9f574 as useDateRangePickerState, $eff5d8ee529ac4bb$export$fd53cef0cc796101 as useTimeFieldState };","map":{"version":3,"names":["$35a22f14a1f04b11$export$eac50920cf2fd59a","value","minValue","maxValue","compare","$35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS","year","month","day","hour","minute","second","$35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS","$35a22f14a1f04b11$export$7e319ea407e63bc0","fieldOptions","options","defaultFieldOptions","shouldForceLeadingZeros","_objectSpread","granularity","keys","Object","_options_maxGranularity","startIdx","indexOf","maxGranularity","endIdx","Error","opts","slice","reduce","key","hourCycle","hour12","timeZone","hasTime","hideTimeZone","timeZoneName","showEra","era","$35a22f14a1f04b11$export$c5221a78ef73c5e9","placeholderValue","$7UzoM$Time","$35a22f14a1f04b11$export$61a490a80c552550","calendar","undefined","$7UzoM$toCalendar","$35a22f14a1f04b11$export$66aa2b09de4b1ea5","date","$7UzoM$now","set","millisecond","$7UzoM$toCalendarDate","$7UzoM$toCalendarDateTime","$35a22f14a1f04b11$export$2440da353cedad43","v","defaultTimeZone","defaultGranularity","toString","_ref","$7UzoM$useState","_ref2","_slicedToArray","lastValue","setLastValue","$ab5bf3f618090389$export$87194bb378cc3ac2","props","_props_isDateUnavailable","overlayState","$7UzoM$useOverlayTriggerState","_ref3","$7UzoM$useControlledState","defaultValue","onChange","_ref4","setValue","_ref5","_ref6","dateValue","toDate","_props_shouldCloseOnSelect","shouldCloseOnSelect","_ref7","_ref8","selectedDate","setSelectedDate","_ref9","_ref10","selectedTime","setSelectedTime","commitValue","time","selectDate","newValue","shouldClose","setOpen","selectTime","isValueInvalid","isInvalid","validationState","isDateUnavailable","call","timeValue","setDateValue","setTimeValue","isOpen","formatValue","locale","formatOptions","identifier","formatter","$7UzoM$DateFormatter","format","$3e3ed55ab2966714$var$placeholders","$7UzoM$LocalizedStringDictionary","ach","af","am","an","ar","ast","az","be","bg","bn","br","bs","ca","cak","ckb","cs","cy","da","de","dsb","el","en","eo","es","et","eu","fa","ff","fi","fr","fy","ga","gd","gl","he","hr","hsb","hu","ia","id","it","ja","ka","kk","kn","ko","lb","lo","lt","lv","meh","ml","ms","nl","nn","no","oc","pl","pt","rm","ro","ru","sc","scn","sk","sl","sr","sv","szl","tg","th","tr","uk","$3e3ed55ab2966714$export$d3f5c5e0a5023fa0","field","getStringForLocale","$3c0fc76039f1c516$var$EDITABLE_SEGMENTS","dayPeriod","$3c0fc76039f1c516$var$PAGE_STEP","$3c0fc76039f1c516$var$TYPE_MAPPING","dayperiod","$3c0fc76039f1c516$export$60e84778edff6d26","createCalendar","isDisabled","isReadOnly","isRequired","_ref11","_ref12","defaultFormatter","$7UzoM$useMemo","resolvedOptions","_ref13","_ref14","setDate","calendarValue","_ref15","_ref16","placeholderDate","setPlaceholderDate","val","_props_maxGranularity","formatOpts","dateFormatter","allSegments","formatToParts","Date","filter","seg","type","p","_ref17","_ref18","validSegments","setValidSegments","clearedSegment","$7UzoM$useRef","lastCalendarIdentifier","$7UzoM$useEffect","current","placeholder","length","displayValue","validKeys","allKeys","$7UzoM$GregorianCalendar","segments","map","segment","isEditable","getEras","isPlaceholder","text","$3c0fc76039f1c516$var$getSegmentLimits","markValid","part","adjustSegment","amount","$3c0fc76039f1c516$var$addSegment","_props_maxGranularity1","increment","decrement","incrementPage","decrementPage","setSegment","$3c0fc76039f1c516$var$setSegment","confirmPlaceholder","copy","clearSegment","isPM","shouldBePM","_defineProperty","eras","getYearsInEra","$7UzoM$getMinimumMonthInYear","getMonthsInYear","$7UzoM$getMinimumDayInMonth","getDaysInMonth","cycle","round","hours","segmentValue","wasPM","$93c38a5e28be6249$export$e50a61c1de9f574","_props_isDateUnavailable1","_ref19","_ref20","controlledValue","setControlledValue","_ref21","start","end","_ref22","setPlaceholderValue","_ref23","_ref24","_ref25","_ref26","dateRange","setSelectedDateRange","_ref27","_ref28","timeRange","setSelectedTimeRange","setDateRange","range","setTimeRange","setTime","setDateTime","dateTime","startTimeZone","startGranularity","endTimeZone","endGranularity","startOptions","startDate","endDate","startFormatter","endFormatter","parts","formatRangeToParts","separatorIndex","i","source","e","endOptions","$eff5d8ee529ac4bb$export$fd53cef0cc796101","_props$placeholderVal","_ref29","_ref30","defaultValueTimeZone","valueTimeZone","$7UzoM$toZoned","$eff5d8ee529ac4bb$var$convertValue","minDate","maxDate","$7UzoM$toTime","state","arguments","$7UzoM$today","$7UzoM$getLocalTimeZone"],"sources":["C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\index.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\useDatePickerState.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\utils.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\useDateFieldState.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\placeholders.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\useDateRangePickerState.ts","C:\\Users\\ryann\\OneDrive\\Área de Trabalho\\pdm\\my-app\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\useTimeFieldState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useDatePickerState} from './useDatePickerState';\nexport {useDateFieldState} from './useDateFieldState';\nexport {useDateRangePickerState} from './useDateRangePickerState';\nexport {useTimeFieldState} from './useTimeFieldState';\n\nexport type {DateFieldStateOptions, DateFieldState, DateSegment, SegmentType} from './useDateFieldState';\nexport type {DatePickerStateOptions, DatePickerState} from './useDatePickerState';\nexport type {DateRangePickerStateOptions, DateRangePickerState} from './useDateRangePickerState';\nexport type {TimeFieldStateOptions, TimeFieldState} from './useTimeFieldState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, DateFormatter, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {FieldOptions, getFormatOptions, getPlaceholderTime, isInvalid, useDefaultProps} from './utils';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useControlledState} from '@react-stately/utils';\nimport {useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface DatePickerStateOptions<T extends DateValue> extends DatePickerProps<T> {\n  /**\n   * Determines whether the date picker popover should close automatically when a date is selected.\n   * @default true\n   */\n  shouldCloseOnSelect?: boolean | (() => boolean)\n}\n\nexport interface DatePickerState extends OverlayTriggerState {\n  /** The currently selected date. */\n  value: DateValue,\n  /** Sets the selected date. */\n  setValue(value: DateValue): void,\n  /**\n   * The date portion of the value. This may be set prior to `value` if the user has\n   * selected a date but has not yet selected a time.\n   */\n  dateValue: DateValue,\n  /** Sets the date portion of the value. */\n  setDateValue(value: CalendarDate): void,\n  /**\n   * The time portion of the value. This may be set prior to `value` if the user has\n   * selected a time but has not yet selected a date.\n   */\n  timeValue: TimeValue,\n  /** Sets the time portion of the value. */\n  setTimeValue(value: TimeValue): void,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** Whether the date picker supports selecting a time, according to the `granularity` prop and current value. */\n  hasTime: boolean,\n  /** Whether the calendar popover is currently open. */\n  isOpen: boolean,\n  /** Sets whether the calendar popover is open. */\n  setOpen(isOpen: boolean): void,\n  /**\n   * The current validation state of the date picker, based on the `validationState`, `minValue`, and `maxValue` props.\n   * @deprecated Use `isInvalid` instead.\n   */\n  validationState: ValidationState,\n  /** Whether the date picker is invalid, based on the `isInvalid`, `minValue`, and `maxValue` props. */\n  isInvalid: boolean,\n  /** Formats the selected value using the given options. */\n  formatValue(locale: string, fieldOptions: FieldOptions): string\n}\n\n/**\n * Provides state management for a date picker component.\n * A date picker combines a DateField and a Calendar popover to allow users to enter or select a date and time value.\n */\nexport function useDatePickerState<T extends DateValue = DateValue>(props: DatePickerStateOptions<T>): DatePickerState {\n  let overlayState = useOverlayTriggerState(props);\n  let [value, setValue] = useControlledState<DateValue>(props.value, props.defaultValue || null, props.onChange);\n\n  let v = (value || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let dateValue = value != null ? value.toDate(defaultTimeZone ?? 'UTC') : null;\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second';\n  let shouldCloseOnSelect = props.shouldCloseOnSelect ?? true;\n\n  let [selectedDate, setSelectedDate] = useState<DateValue>(null);\n  let [selectedTime, setSelectedTime] = useState<TimeValue>(null);\n\n  if (value) {\n    selectedDate = value;\n    if ('hour' in value) {\n      selectedTime = value;\n    }\n  }\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let commitValue = (date: DateValue, time: TimeValue) => {\n    setValue('timeZone' in time ? time.set(toCalendarDate(date)) : toCalendarDateTime(date, time));\n    setSelectedDate(null);\n    setSelectedTime(null);\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let selectDate = (newValue: CalendarDate) => {\n    let shouldClose = typeof shouldCloseOnSelect === 'function' ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (selectedTime || shouldClose) {\n        commitValue(newValue, selectedTime || getPlaceholderTime(props.placeholderValue));\n      } else {\n        setSelectedDate(newValue);\n      }\n    } else {\n      setValue(newValue);\n    }\n\n    if (shouldClose) {\n      overlayState.setOpen(false);\n    }\n  };\n\n  let selectTime = (newValue: TimeValue) => {\n    if (selectedDate && newValue) {\n      commitValue(selectedDate, newValue);\n    } else {\n      setSelectedTime(newValue);\n    }\n  };\n\n  let isValueInvalid = props.isInvalid || props.validationState === 'invalid' ||\n    isInvalid(value, props.minValue, props.maxValue) ||\n    value && props.isDateUnavailable?.(value);\n  let validationState: ValidationState = props.validationState || (isValueInvalid ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateValue: selectedDate,\n    timeValue: selectedTime,\n    setDateValue: selectDate,\n    setTimeValue: selectTime,\n    granularity,\n    hasTime,\n    ...overlayState,\n    setOpen(isOpen) {\n      // Commit the selected date when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time was set and not the date, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !value && selectedDate && hasTime) {\n        commitValue(selectedDate, selectedTime || getPlaceholderTime(props.placeholderValue));\n      }\n\n      overlayState.setOpen(isOpen);\n    },\n    validationState,\n    isInvalid: isValueInvalid,\n    formatValue(locale, fieldOptions) {\n      if (!dateValue) {\n        return '';\n      }\n\n      let formatOptions = getFormatOptions(fieldOptions, {\n        granularity,\n        timeZone: defaultTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: value.calendar.identifier === 'gregory' && value.era === 'BC'\n      });\n\n      let formatter = new DateFormatter(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, now, Time, toCalendar, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {useState} from 'react';\n\nexport function isInvalid(value: DateValue, minValue: DateValue, maxValue: DateValue) {\n  return value != null && (\n    (minValue != null && value.compare(minValue) < 0) ||\n    (maxValue != null && value.compare(maxValue) > 0)\n  );\n}\n\nexport type FieldOptions = Pick<Intl.DateTimeFormatOptions, 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second'>;\ninterface FormatterOptions {\n  timeZone?: string,\n  hideTimeZone?: boolean,\n  granularity?: DatePickerProps<any>['granularity'],\n  maxGranularity?: 'year' | 'month' | DatePickerProps<any>['granularity'],\n  hourCycle?: 12 | 24,\n  showEra?: boolean,\n  shouldForceLeadingZeros?: boolean\n}\n\nconst DEFAULT_FIELD_OPTIONS: FieldOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: '2-digit',\n  second: '2-digit'\n};\n\nconst TWO_DIGIT_FIELD_OPTIONS: FieldOptions = {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit'\n};\n\nexport function getFormatOptions(\n  fieldOptions: FieldOptions,\n  options: FormatterOptions\n): Intl.DateTimeFormatOptions {\n  let defaultFieldOptions = options.shouldForceLeadingZeros ? TWO_DIGIT_FIELD_OPTIONS : DEFAULT_FIELD_OPTIONS;\n  fieldOptions = {...defaultFieldOptions, ...fieldOptions};\n  let granularity = options.granularity || 'minute';\n  let keys = Object.keys(fieldOptions);\n  let startIdx = keys.indexOf(options.maxGranularity ?? 'year');\n  if (startIdx < 0) {\n    startIdx = 0;\n  }\n\n  let endIdx = keys.indexOf(granularity);\n  if (endIdx < 0) {\n    endIdx = 2;\n  }\n\n  if (startIdx > endIdx) {\n    throw new Error('maxGranularity must be greater than granularity');\n  }\n\n  let opts: Intl.DateTimeFormatOptions = keys.slice(startIdx, endIdx + 1).reduce((opts, key) => {\n    opts[key] = fieldOptions[key];\n    return opts;\n  }, {});\n\n  if (options.hourCycle != null) {\n    opts.hour12 = options.hourCycle === 12;\n  }\n\n  opts.timeZone = options.timeZone || 'UTC';\n\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second';\n  if (hasTime && options.timeZone && !options.hideTimeZone) {\n    opts.timeZoneName = 'short';\n  }\n\n  if (options.showEra && startIdx === 0) {\n    opts.era = 'short';\n  }\n\n  return opts;\n}\n\nexport function getPlaceholderTime(placeholderValue: DateValue): TimeValue {\n  if (placeholderValue && 'hour' in placeholderValue) {\n    return placeholderValue;\n  }\n\n  return new Time();\n}\n\nexport function convertValue(value: DateValue, calendar: Calendar): DateValue {\n  if (value === null) {\n    return null;\n  }\n\n  if (!value) {\n    return undefined;\n  }\n\n  return toCalendar(value, calendar);\n}\n\n\nexport function createPlaceholderDate(placeholderValue: DateValue, granularity: string, calendar: Calendar, timeZone: string) {\n  if (placeholderValue) {\n    return convertValue(placeholderValue, calendar);\n  }\n\n  let date = toCalendar(now(timeZone).set({\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  }), calendar);\n\n  if (granularity === 'year' || granularity === 'month' || granularity === 'day') {\n    return toCalendarDate(date);\n  }\n\n  if (!timeZone) {\n    return toCalendarDateTime(date);\n  }\n\n  return date;\n}\n\nexport function useDefaultProps(v: DateValue, granularity: Granularity): [Granularity, string] {\n  // Compute default granularity and time zone from the value. If the value becomes null, keep the last values.\n  let defaultTimeZone = (v && 'timeZone' in v ? v.timeZone : undefined);\n  let defaultGranularity: Granularity = (v && 'minute' in v ? 'minute' : 'day');\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && granularity && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let [lastValue, setLastValue] = useState<[Granularity, string]>([defaultGranularity, defaultTimeZone]);\n\n  // If the granularity or time zone changed, update the last value.\n  if (v && (lastValue[0] !== defaultGranularity || lastValue[1] !== defaultTimeZone)) {\n    setLastValue([defaultGranularity, defaultTimeZone]);\n  }\n\n  if (!granularity) {\n    granularity = v ? defaultGranularity : lastValue[0];\n  }\n\n  let timeZone = v ? defaultTimeZone : lastValue[1];\n  return [granularity, timeZone];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, DateFormatter, getMinimumDayInMonth, getMinimumMonthInYear, GregorianCalendar, toCalendar} from '@internationalized/date';\nimport {convertValue, createPlaceholderDate, FieldOptions, getFormatOptions, isInvalid, useDefaultProps} from './utils';\nimport {DatePickerProps, DateValue, Granularity} from '@react-types/datepicker';\nimport {getPlaceholder} from './placeholders';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport type SegmentType = 'era' | 'year' | 'month' | 'day' |  'hour' | 'minute' | 'second' | 'dayPeriod' | 'literal' | 'timeZoneName';\nexport interface DateSegment {\n  /** The type of segment. */\n  type: SegmentType,\n  /** The formatted text for the segment. */\n  text: string,\n  /** The numeric value for the segment, if applicable. */\n  value?: number,\n  /** The minimum numeric value for the segment, if applicable. */\n  minValue?: number,\n  /** The maximum numeric value for the segment, if applicable. */\n  maxValue?: number,\n  /** Whether the value is a placeholder. */\n  isPlaceholder: boolean,\n  /** A placeholder string for the segment. */\n  placeholder: string,\n  /** Whether the segment is editable. */\n  isEditable: boolean\n}\n\nexport interface DateFieldState {\n  /** The current field value. */\n  value: DateValue,\n  /** The current value, converted to a native JavaScript `Date` object.  */\n  dateValue: Date,\n  /** The calendar system currently in use. */\n  calendar: Calendar,\n  /** Sets the field's value. */\n  setValue(value: DateValue): void,\n  /** A list of segments for the current value. */\n  segments: DateSegment[],\n  /** A date formatter configured for the current locale and format. */\n  dateFormatter: DateFormatter,\n  /**\n   * The current validation state of the date field, based on the `validationState`, `minValue`, and `maxValue` props.\n   * @deprecated Use `isInvalid` instead.\n   */\n  validationState: ValidationState,\n  /** Whether the date field is invalid, based on the `isInvalid`, `minValue`, and `maxValue` props. */\n  isInvalid: boolean,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** The maximum date or time unit that is displayed in the field. */\n  maxGranularity: 'year' | 'month' | Granularity,\n  /** Whether the field is disabled. */\n  isDisabled: boolean,\n  /** Whether the field is read only. */\n  isReadOnly: boolean,\n  /** Whether the field is required. */\n  isRequired: boolean,\n  /** Increments the given segment. Upon reaching the minimum or maximum value, the value wraps around to the opposite limit. */\n  increment(type: SegmentType): void,\n  /** Decrements the given segment. Upon reaching the minimum or maximum value, the value wraps around to the opposite limit. */\n  decrement(type: SegmentType): void,\n  /**\n   * Increments the given segment by a larger amount, rounding it to the nearest increment.\n   * The amount to increment by depends on the field, for example 15 minutes, 7 days, and 5 years.\n   * Upon reaching the minimum or maximum value, the value wraps around to the opposite limit.\n   */\n  incrementPage(type: SegmentType): void,\n  /**\n   * Decrements the given segment by a larger amount, rounding it to the nearest increment.\n   * The amount to decrement by depends on the field, for example 15 minutes, 7 days, and 5 years.\n   * Upon reaching the minimum or maximum value, the value wraps around to the opposite limit.\n   */\n  decrementPage(type: SegmentType): void,\n  /** Sets the value of the given segment. */\n  setSegment(type: 'era', value: string): void,\n  setSegment(type: SegmentType, value: number): void,\n  /** Updates the remaining unfilled segments with the placeholder value. */\n  confirmPlaceholder(): void,\n  /** Clears the value of the given segment, reverting it to the placeholder. */\n  clearSegment(type: SegmentType): void,\n  /** Formats the current date value using the given options. */\n  formatValue(fieldOptions: FieldOptions): string\n}\n\nconst EDITABLE_SEGMENTS = {\n  year: true,\n  month: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true,\n  dayPeriod: true,\n  era: true\n};\n\nconst PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15\n};\n\n// Node seems to convert everything to lowercase...\nconst TYPE_MAPPING = {\n  dayperiod: 'dayPeriod'\n};\n\nexport interface DateFieldStateOptions<T extends DateValue = DateValue> extends DatePickerProps<T> {\n  /**\n   * The maximum unit to display in the date field.\n   * @default 'year'\n   */\n  maxGranularity?: 'year' | 'month' | Granularity,\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar\n}\n\n/**\n * Provides state management for a date field component.\n * A date field allows users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nexport function useDateFieldState<T extends DateValue = DateValue>(props: DateFieldStateOptions<T>): DateFieldState {\n  let {\n    locale,\n    createCalendar,\n    hideTimeZone,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  } = props;\n\n  let v: DateValue = (props.value || props.defaultValue || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let timeZone = defaultTimeZone || 'UTC';\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let defaultFormatter = useMemo(() => new DateFormatter(locale), [locale]);\n  let calendar = useMemo(() => createCalendar(defaultFormatter.resolvedOptions().calendar), [createCalendar, defaultFormatter]);\n\n  let [value, setDate] = useControlledState<DateValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let calendarValue = useMemo(() => convertValue(value, calendar), [value, calendar]);\n\n  // We keep track of the placeholder date separately in state so that onChange is not called\n  // until all segments are set. If the value === null (not undefined), then assume the component\n  // is controlled, so use the placeholder as the value until all segments are entered so it doesn't\n  // change from uncontrolled to controlled and emit a warning.\n  let [placeholderDate, setPlaceholderDate] = useState(\n    () => createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n  );\n\n  let val = calendarValue || placeholderDate;\n  let showEra = calendar.identifier === 'gregory' && val.era === 'BC';\n  let formatOpts = useMemo(() => ({\n    granularity,\n    maxGranularity: props.maxGranularity ?? 'year',\n    timeZone: defaultTimeZone,\n    hideTimeZone,\n    hourCycle: props.hourCycle,\n    showEra,\n    shouldForceLeadingZeros: props.shouldForceLeadingZeros\n  }), [props.maxGranularity, granularity, props.hourCycle, props.shouldForceLeadingZeros, defaultTimeZone, hideTimeZone, showEra]);\n  let opts = useMemo(() => getFormatOptions({}, formatOpts), [formatOpts]);\n\n  let dateFormatter = useMemo(() => new DateFormatter(locale, opts), [locale, opts]);\n  let resolvedOptions = useMemo(() => dateFormatter.resolvedOptions(), [dateFormatter]);\n\n  // Determine how many editable segments there are for validation purposes.\n  // The result is cached for performance.\n  let allSegments: Partial<typeof EDITABLE_SEGMENTS> = useMemo(() =>\n    dateFormatter.formatToParts(new Date())\n      .filter(seg => EDITABLE_SEGMENTS[seg.type])\n      .reduce((p, seg) => (p[seg.type] = true, p), {})\n  , [dateFormatter]);\n\n  let [validSegments, setValidSegments] = useState<Partial<typeof EDITABLE_SEGMENTS>>(\n    () => props.value || props.defaultValue ? {...allSegments} : {}\n  );\n\n  let clearedSegment = useRef<string>();\n\n  // Reset placeholder when calendar changes\n  let lastCalendarIdentifier = useRef(calendar.identifier);\n  useEffect(() => {\n    if (calendar.identifier !== lastCalendarIdentifier.current) {\n      lastCalendarIdentifier.current = calendar.identifier;\n      setPlaceholderDate(placeholder =>\n        Object.keys(validSegments).length > 0\n          ? toCalendar(placeholder, calendar)\n          : createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n      );\n    }\n  }, [calendar, granularity, validSegments, defaultTimeZone, props.placeholderValue]);\n\n  // If there is a value prop, and some segments were previously placeholders, mark them all as valid.\n  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {\n    validSegments = {...allSegments};\n    setValidSegments(validSegments);\n  }\n\n  // If the value is set to null and all segments are valid, reset the placeholder.\n  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {\n    validSegments = {};\n    setValidSegments(validSegments);\n    setPlaceholderDate(createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone));\n  }\n\n  // If all segments are valid, use the date from state, otherwise use the placeholder date.\n  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;\n  let setValue = (newValue: DateValue) => {\n    if (props.isDisabled || props.isReadOnly) {\n      return;\n    }\n    let validKeys = Object.keys(validSegments);\n    let allKeys = Object.keys(allSegments);\n\n    // if all the segments are completed or a timefield with everything but am/pm set the time, also ignore when am/pm cleared\n    if (newValue == null) {\n      setDate(null);\n      setPlaceholderDate(createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone));\n      setValidSegments({});\n    } else if (validKeys.length >= allKeys.length || (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod && clearedSegment.current !== 'dayPeriod')) {\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      newValue = toCalendar(newValue, v?.calendar || new GregorianCalendar());\n      setDate(newValue);\n    } else {\n      setPlaceholderDate(newValue);\n    }\n    clearedSegment.current = null;\n  };\n\n  let dateValue = useMemo(() => displayValue.toDate(timeZone), [displayValue, timeZone]);\n  let segments = useMemo(() =>\n    dateFormatter.formatToParts(dateValue)\n      .map(segment => {\n        let isEditable = EDITABLE_SEGMENTS[segment.type];\n        if (segment.type === 'era' && calendar.getEras().length === 1) {\n          isEditable = false;\n        }\n\n        let isPlaceholder = EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type];\n        let placeholder = EDITABLE_SEGMENTS[segment.type] ? getPlaceholder(segment.type, segment.value, locale) : null;\n        return {\n          type: TYPE_MAPPING[segment.type] || segment.type,\n          text: isPlaceholder ? placeholder : segment.value,\n          ...getSegmentLimits(displayValue, segment.type, resolvedOptions),\n          isPlaceholder,\n          placeholder,\n          isEditable\n        } as DateSegment;\n      })\n  , [dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar, locale]);\n\n  // When the era field appears, mark it valid if the year field is already valid.\n  // If the era field disappears, remove it from the valid segments.\n  if (allSegments.era && validSegments.year && !validSegments.era) {\n    validSegments.era = true;\n    setValidSegments({...validSegments});\n  } else if (!allSegments.era && validSegments.era) {\n    delete validSegments.era;\n    setValidSegments({...validSegments});\n  }\n\n  let markValid = (part: Intl.DateTimeFormatPartTypes) => {\n    validSegments[part] = true;\n    if (part === 'year' && allSegments.era) {\n      validSegments.era = true;\n    }\n    setValidSegments({...validSegments});\n  };\n\n  let adjustSegment = (type: Intl.DateTimeFormatPartTypes, amount: number) => {\n    if (!validSegments[type]) {\n      markValid(type);\n      let validKeys = Object.keys(validSegments);\n      let allKeys = Object.keys(allSegments);\n      if (validKeys.length >= allKeys.length || (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod)) {\n        setValue(displayValue);\n      }\n    } else {\n      setValue(addSegment(displayValue, type, amount, resolvedOptions));\n    }\n  };\n\n  let isValueInvalid = props.isInvalid || props.validationState === 'invalid' ||\n    isInvalid(calendarValue, props.minValue, props.maxValue);\n  let validationState: ValidationState = props.validationState || (isValueInvalid ? 'invalid' : null);\n\n  return {\n    value: calendarValue,\n    dateValue,\n    calendar,\n    setValue,\n    segments,\n    dateFormatter,\n    validationState,\n    isInvalid: isValueInvalid,\n    granularity,\n    maxGranularity: props.maxGranularity ?? 'year',\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    increment(part) {\n      adjustSegment(part, 1);\n    },\n    decrement(part) {\n      adjustSegment(part, -1);\n    },\n    incrementPage(part) {\n      adjustSegment(part, PAGE_STEP[part] || 1);\n    },\n    decrementPage(part) {\n      adjustSegment(part, -(PAGE_STEP[part] || 1));\n    },\n    setSegment(part, v) {\n      markValid(part);\n      setValue(setSegment(displayValue, part, v, resolvedOptions));\n    },\n    confirmPlaceholder() {\n      if (props.isDisabled || props.isReadOnly) {\n        return;\n      }\n\n      // Confirm the placeholder if only the day period is not filled in.\n      let validKeys = Object.keys(validSegments);\n      let allKeys = Object.keys(allSegments);\n      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {\n        validSegments = {...allSegments};\n        setValidSegments(validSegments);\n        setValue(displayValue.copy());\n      }\n    },\n    clearSegment(part) {\n      delete validSegments[part];\n      clearedSegment.current = part;\n      setValidSegments({...validSegments});\n\n      let placeholder = createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone);\n      let value = displayValue;\n\n      // Reset day period to default without changing the hour.\n      if (part === 'dayPeriod' && 'hour' in displayValue && 'hour' in placeholder) {\n        let isPM = displayValue.hour >= 12;\n        let shouldBePM = placeholder.hour >= 12;\n        if (isPM && !shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour - 12});\n        } else if (!isPM && shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour + 12});\n        }\n      } else if (part in displayValue) {\n        value = displayValue.set({[part]: placeholder[part]});\n      }\n\n      setDate(null);\n      setValue(value);\n    },\n    formatValue(fieldOptions: FieldOptions) {\n      if (!calendarValue) {\n        return '';\n      }\n\n      let formatOptions = getFormatOptions(fieldOptions, formatOpts);\n      let formatter = new DateFormatter(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\n\nfunction getSegmentLimits(date: DateValue, type: string, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (type) {\n    case 'era': {\n      let eras = date.calendar.getEras();\n      return {\n        value: eras.indexOf(date.era),\n        minValue: 0,\n        maxValue: eras.length - 1\n      };\n    }\n    case 'year':\n      return {\n        value: date.year,\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date)\n      };\n    case 'month':\n      return {\n        value: date.month,\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date)\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date)\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12\n        };\n      case 'hour':\n        if (options.hour12) {\n          let isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59\n        };\n      case 'second':\n        return {\n          value: date.second,\n          minValue: 0,\n          maxValue: 59\n        };\n    }\n  }\n\n  return {};\n}\n\nfunction addSegment(value: DateValue, part: string, amount: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24\n        });\n    }\n  }\n}\n\nfunction setSegment(value: DateValue, part: string, segmentValue: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n    case 'era':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let wasPM = hours >= 12;\n        let isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          let hours = value.hour;\n          let wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n        // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedStringDictionary} from '@internationalized/string';\n\n// These placeholders are based on the strings used by the <input type=\"date\">\n// implementations in Chrome and Firefox. Additional languages are supported\n// here than React Spectrum's typical translations.\nconst placeholders = new LocalizedStringDictionary({\n  ach: {year: 'mwaka', month: 'dwe', day: 'nino'},\n  af: {year: 'jjjj', month: 'mm', day: 'dd'},\n  am: {year: 'ዓዓዓዓ', month: 'ሚሜ', day: 'ቀቀ'},\n  an: {year: 'aaaa', month: 'mm', day: 'dd'},\n  ar: {year: 'سنة', month: 'شهر', day: 'يوم'},\n  ast: {year: 'aaaa', month: 'mm', day: 'dd'},\n  az: {year: 'iiii', month: 'aa', day: 'gg'},\n  be: {year: 'гггг', month: 'мм', day: 'дд'},\n  bg: {year: 'гггг', month: 'мм', day: 'дд'},\n  bn: {year: 'yyyy', month: 'মিমি', day: 'dd'},\n  br: {year: 'bbbb', month: 'mm', day: 'dd'},\n  bs: {year: 'gggg', month: 'mm', day: 'dd'},\n  ca: {year: 'aaaa', month: 'mm', day: 'dd'},\n  cak: {year: 'jjjj', month: 'ii', day: \"q'q'\"},\n  ckb: {year: 'ساڵ', month: 'مانگ', day: 'ڕۆژ'},\n  cs: {year: 'rrrr', month: 'mm', day: 'dd'},\n  cy: {year: 'bbbb', month: 'mm', day: 'dd'},\n  da: {year: 'åååå', month: 'mm', day: 'dd'},\n  de: {year: 'jjjj', month: 'mm', day: 'tt'},\n  dsb: {year: 'llll', month: 'mm', day: 'źź'},\n  el: {year: 'εεεε', month: 'μμ', day: 'ηη'},\n  en: {year: 'yyyy', month: 'mm', day: 'dd'},\n  eo: {year: 'jjjj', month: 'mm', day: 'tt'},\n  es: {year: 'aaaa', month: 'mm', day: 'dd'},\n  et: {year: 'aaaa', month: 'kk', day: 'pp'},\n  eu: {year: 'uuuu', month: 'hh', day: 'ee'},\n  fa: {year: 'سال', month: 'ماه', day: 'روز'},\n  ff: {year: 'hhhh', month: 'll', day: 'ññ'},\n  fi: {year: 'vvvv', month: 'kk', day: 'pp'},\n  fr: {year: 'aaaa', month: 'mm', day: 'jj'},\n  fy: {year: 'jjjj', month: 'mm', day: 'dd'},\n  ga: {year: 'bbbb', month: 'mm', day: 'll'},\n  gd: {year: 'bbbb', month: 'mm', day: 'll'},\n  gl: {year: 'aaaa', month: 'mm', day: 'dd'},\n  he: {year: 'שנה', month: 'חודש', day: 'יום'},\n  hr: {year: 'gggg', month: 'mm', day: 'dd'},\n  hsb: {year: 'llll', month: 'mm', day: 'dd'},\n  hu: {year: 'éééé', month: 'hh', day: 'nn'},\n  ia: {year: 'aaaa', month: 'mm', day: 'dd'},\n  id: {year: 'tttt', month: 'bb', day: 'hh'},\n  it: {year: 'aaaa', month: 'mm', day: 'gg'},\n  ja: {year: ' 年 ', month: '月', day: '日'},\n  ka: {year: 'წწწწ', month: 'თთ', day: 'რრ'},\n  kk: {year: 'жжжж', month: 'аа', day: 'кк'},\n  kn: {year: 'ವವವವ', month: 'ಮಿಮೀ', day: 'ದಿದಿ'},\n  ko: {year: '연도', month: '월', day: '일'},\n  lb: {year: 'jjjj', month: 'mm', day: 'dd'},\n  lo: {year: 'ປປປປ', month: 'ດດ', day: 'ວວ'},\n  lt: {year: 'mmmm', month: 'mm', day: 'dd'},\n  lv: {year: 'gggg', month: 'mm', day: 'dd'},\n  meh: {year: 'aaaa', month: 'mm', day: 'dd'},\n  ml: {year: 'വർഷം', month: 'മാസം', day: 'തീയതി'},\n  ms: {year: 'tttt', month: 'mm', day: 'hh'},\n  nl: {year: 'jjjj', month: 'mm', day: 'dd'},\n  nn: {year: 'åååå', month: 'mm', day: 'dd'},\n  no: {year: 'åååå', month: 'mm', day: 'dd'},\n  oc: {year: 'aaaa', month: 'mm', day: 'jj'},\n  pl: {year: 'rrrr', month: 'mm', day: 'dd'},\n  pt: {year: 'aaaa', month: 'mm', day: 'dd'},\n  rm: {year: 'oooo', month: 'mm', day: 'dd'},\n  ro: {year: 'aaaa', month: 'll', day: 'zz'},\n  ru: {year: 'гггг', month: 'мм', day: 'дд'},\n  sc: {year: 'aaaa', month: 'mm', day: 'dd'},\n  scn: {year: 'aaaa', month: 'mm', day: 'jj'},\n  sk: {year: 'rrrr', month: 'mm', day: 'dd'},\n  sl: {year: 'llll', month: 'mm', day: 'dd'},\n  sr: {year: 'гггг', month: 'мм', day: 'дд'},\n  sv: {year: 'åååå', month: 'mm', day: 'dd'},\n  szl: {year: 'rrrr', month: 'mm', day: 'dd'},\n  tg: {year: 'сссс', month: 'мм', day: 'рр'},\n  th: {year: 'ปปปป', month: 'ดด', day: 'วว'},\n  tr: {year: 'yyyy', month: 'aa', day: 'gg'},\n  uk: {year: 'рррр', month: 'мм', day: 'дд'},\n  'zh-CN': {year: '年', month: '月', day: '日'},\n  'zh-TW': {year: '年', month: '月', day: '日'}\n}, 'en');\n\nexport function getPlaceholder(field: string, value: string, locale: string) {\n  // Use the actual placeholder value for the era and day period fields.\n  if (field === 'era' || field === 'dayPeriod') {\n    return value;\n  }\n\n  if (field === 'year' || field === 'month' || field === 'day') {\n    return placeholders.getStringForLocale(field, locale);\n  }\n\n  // For time fields (e.g. hour, minute, etc.), use two dashes as the placeholder.\n  return '––';\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DateRange, DateRangePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {FieldOptions, getFormatOptions, getPlaceholderTime, isInvalid, useDefaultProps} from './utils';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {RangeValue, ValidationState} from '@react-types/shared';\nimport {useControlledState} from '@react-stately/utils';\nimport {useState} from 'react';\n\nexport interface DateRangePickerStateOptions<T extends DateValue = DateValue> extends DateRangePickerProps<T> {\n  /**\n   * Determines whether the date picker popover should close automatically when a date is selected.\n   * @default true\n   */\n  shouldCloseOnSelect?: boolean | (() => boolean)\n}\n\ntype TimeRange = RangeValue<TimeValue>;\nexport interface DateRangePickerState extends OverlayTriggerState {\n  /** The currently selected date range. */\n  value: DateRange,\n  /** Sets the selected date range. */\n  setValue(value: DateRange): void,\n  /**\n   * The date portion of the selected range. This may be set prior to `value` if the user has\n   * selected a date range but has not yet selected a time range.\n   */\n  dateRange: DateRange,\n  /** Sets the date portion of the selected range. */\n  setDateRange(value: DateRange): void,\n  /**\n   * The time portion of the selected range. This may be set prior to `value` if the user has\n   * selected a time range but has not yet selected a date range.\n   */\n  timeRange: TimeRange,\n  /** Sets the time portion of the selected range. */\n  setTimeRange(value: TimeRange): void,\n  /** Sets the date portion of either the start or end of the selected range. */\n  setDate(part: 'start' | 'end', value: DateValue): void,\n  /** Sets the time portion of either the start or end of the selected range. */\n  setTime(part: 'start' | 'end', value: TimeValue): void,\n  /** Sets the date and time of either the start or end of the selected range. */\n  setDateTime(part: 'start' | 'end', value: DateValue): void,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** Whether the date range picker supports selecting times, according to the `granularity` prop and current value. */\n  hasTime: boolean,\n  /** Whether the calendar popover is currently open. */\n  isOpen: boolean,\n  /** Sets whether the calendar popover is open. */\n  setOpen(isOpen: boolean): void,\n  /**\n   * The current validation state of the date range picker, based on the `validationState`, `minValue`, and `maxValue` props.\n   * @deprecated Use `isInvalid` instead.\n   */\n  validationState: ValidationState,\n  /** Whether the date range picker is invalid, based on the `isInvalid`, `minValue`, and `maxValue` props. */\n  isInvalid: boolean,\n  /** Formats the selected range using the given options. */\n  formatValue(locale: string, fieldOptions: FieldOptions): {start: string, end: string}\n}\n\n/**\n * Provides state management for a date range picker component.\n * A date range picker combines two DateFields and a RangeCalendar popover to allow\n * users to enter or select a date and time range.\n */\nexport function useDateRangePickerState<T extends DateValue = DateValue>(props: DateRangePickerStateOptions<T>): DateRangePickerState {\n  let overlayState = useOverlayTriggerState(props);\n  let [controlledValue, setControlledValue] = useControlledState<DateRange>(props.value, props.defaultValue || null, props.onChange);\n  let [placeholderValue, setPlaceholderValue] = useState(() => controlledValue || {start: null, end: null});\n\n  // Reset the placeholder if the value prop is set to null.\n  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {\n    placeholderValue = {start: null, end: null};\n    setPlaceholderValue(placeholderValue);\n  }\n\n  let value = controlledValue || placeholderValue;\n\n  let setValue = (value: DateRange) => {\n    setPlaceholderValue(value);\n    if (value?.start && value.end) {\n      setControlledValue(value);\n    } else {\n      setControlledValue(null);\n    }\n  };\n\n  let v = (value?.start || value?.end || props.placeholderValue);\n  let [granularity] = useDefaultProps(v, props.granularity);\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second';\n  let shouldCloseOnSelect = props.shouldCloseOnSelect ?? true;\n\n  let [dateRange, setSelectedDateRange] = useState<DateRange>(null);\n  let [timeRange, setSelectedTimeRange] = useState<TimeRange>(null);\n\n  if (value && value.start && value.end) {\n    dateRange = value;\n    if ('hour' in value.start) {\n      timeRange = value as TimeRange;\n    }\n  }\n\n  let commitValue = (dateRange: DateRange, timeRange: TimeRange) => {\n    setValue({\n      start: 'timeZone' in timeRange.start ? timeRange.start.set(toCalendarDate(dateRange.start)) : toCalendarDateTime(dateRange.start, timeRange.start),\n      end: 'timeZone' in timeRange.end ? timeRange.end.set(toCalendarDate(dateRange.end)) : toCalendarDateTime(dateRange.end, timeRange.end)\n    });\n    setSelectedDateRange(null);\n    setSelectedTimeRange(null);\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let setDateRange = (range: DateRange) => {\n    let shouldClose = typeof shouldCloseOnSelect === 'function' ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (shouldClose || (range.start && range.end && timeRange?.start && timeRange?.end)) {\n        commitValue(range, {\n          start: timeRange?.start || getPlaceholderTime(props.placeholderValue),\n          end: timeRange?.end || getPlaceholderTime(props.placeholderValue)\n        });\n      } else {\n        setSelectedDateRange(range);\n      }\n    } else if (range.start && range.end) {\n      setValue(range);\n    } else {\n      setSelectedDateRange(range);\n    }\n\n    if (shouldClose) {\n      overlayState.setOpen(false);\n    }\n  };\n\n  let setTimeRange = (range: TimeRange) => {\n    if (dateRange?.start && dateRange?.end && range.start && range.end) {\n      commitValue(dateRange, range);\n    } else {\n      setSelectedTimeRange(range);\n    }\n  };\n\n  let isValueInvalid = props.isInvalid || props.validationState === 'invalid'\n    || (value != null && (\n      isInvalid(value.start, props.minValue, props.maxValue) ||\n      isInvalid(value.end, props.minValue, props.maxValue) ||\n      (value.end != null && value.start != null && value.end.compare(value.start) < 0) ||\n      (value?.start && props.isDateUnavailable?.(value.start)) ||\n      (value?.end && props.isDateUnavailable?.(value.end))\n    ));\n  let validationState: ValidationState = props.validationState || (isValueInvalid ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateRange,\n    timeRange,\n    granularity,\n    hasTime,\n    setDate(part, date) {\n      setDateRange({...dateRange, [part]: date});\n    },\n    setTime(part, time) {\n      setTimeRange({...timeRange, [part]: time});\n    },\n    setDateTime(part, dateTime) {\n      setValue({...value, [part]: dateTime});\n    },\n    setDateRange,\n    setTimeRange,\n    ...overlayState,\n    setOpen(isOpen) {\n      // Commit the selected date range when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time range was set and not the date range, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !(value?.start && value?.end) && dateRange?.start && dateRange?.end && hasTime) {\n        commitValue(dateRange, {\n          start: timeRange?.start || getPlaceholderTime(props.placeholderValue),\n          end: timeRange?.end || getPlaceholderTime(props.placeholderValue)\n        });\n      }\n\n      overlayState.setOpen(isOpen);\n    },\n    validationState,\n    isInvalid: isValueInvalid,\n    formatValue(locale, fieldOptions) {\n      if (!value || !value.start || !value.end) {\n        return null;\n      }\n\n      let startTimeZone = 'timeZone' in value.start ? value.start.timeZone : undefined;\n      let startGranularity = props.granularity || (value.start && 'minute' in value.start ? 'minute' : 'day');\n      let endTimeZone = 'timeZone' in value.end ? value.end.timeZone : undefined;\n      let endGranularity = props.granularity || (value.end && 'minute' in value.end ? 'minute' : 'day');\n\n      let startOptions = getFormatOptions(fieldOptions, {\n        granularity: startGranularity,\n        timeZone: startTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: (value.start.calendar.identifier === 'gregory' && value.start.era === 'BC') ||\n          (value.end.calendar.identifier === 'gregory' && value.end.era === 'BC')\n      });\n\n      let startDate = value.start.toDate(startTimeZone || 'UTC');\n      let endDate = value.end.toDate(endTimeZone || 'UTC');\n\n      let startFormatter = new DateFormatter(locale, startOptions);\n      let endFormatter: Intl.DateTimeFormat;\n      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {\n        // Use formatRange, as it results in shorter output when some of the fields\n        // are shared between the start and end dates (e.g. the same month).\n        // Formatting will fail if the end date is before the start date. Fall back below when that happens.\n        try {\n          let parts = startFormatter.formatRangeToParts(startDate, endDate);\n\n          // Find the separator between the start and end date. This is determined\n          // by finding the last shared literal before the end range.\n          let separatorIndex = -1;\n          for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            if (part.source === 'shared' && part.type === 'literal') {\n              separatorIndex = i;\n            } else if (part.source === 'endRange') {\n              break;\n            }\n          }\n\n          // Now we can combine the parts into start and end strings.\n          let start = '';\n          let end = '';\n          for (let i = 0; i < parts.length; i++) {\n            if (i < separatorIndex) {\n              start += parts[i].value;\n            } else if (i > separatorIndex) {\n              end += parts[i].value;\n            }\n          }\n\n          return {start, end};\n        } catch (e) {\n          // ignore\n        }\n\n        endFormatter = startFormatter;\n      } else {\n        let endOptions = getFormatOptions(fieldOptions, {\n          granularity: endGranularity,\n          timeZone: endTimeZone,\n          hideTimeZone: props.hideTimeZone,\n          hourCycle: props.hourCycle\n        });\n\n        endFormatter = new DateFormatter(locale, endOptions);\n      }\n\n      return {\n        start: startFormatter.format(startDate),\n        end: endFormatter.format(endDate)\n      };\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFieldState, useDateFieldState} from '.';\nimport {DateValue, TimePickerProps, TimeValue} from '@react-types/datepicker';\nimport {getLocalTimeZone, GregorianCalendar, Time, toCalendarDateTime, today, toTime, toZoned} from '@internationalized/date';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo} from 'react';\n\nexport interface TimeFieldStateOptions<T extends TimeValue = TimeValue> extends TimePickerProps<T> {\n  /** The locale to display and edit the value according to. */\n  locale: string\n}\n\nexport interface TimeFieldState extends DateFieldState {\n  /** The current time value. */\n  timeValue: Time\n}\n\n/**\n * Provides state management for a time field component.\n * A time field allows users to enter and edit time values using a keyboard.\n * Each part of a time value is displayed in an individually editable segment.\n */\nexport function useTimeFieldState<T extends TimeValue = TimeValue>(props: TimeFieldStateOptions<T>): TimeFieldState {\n  let {\n    placeholderValue = new Time(),\n    minValue,\n    maxValue,\n    granularity\n  } = props;\n\n  let [value, setValue] = useControlledState<TimeValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let v = value || placeholderValue;\n  let day = v && 'day' in v ? v : undefined;\n  let defaultValueTimeZone = props.defaultValue && 'timeZone' in props.defaultValue ? props.defaultValue.timeZone : undefined;\n  let placeholderDate = useMemo(() => {\n    let valueTimeZone = v && 'timeZone' in v ? v.timeZone : undefined;\n\n    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? toZoned(convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : convertValue(placeholderValue);\n  }, [placeholderValue, v, defaultValueTimeZone]);\n  let minDate = useMemo(() => convertValue(minValue, day), [minValue, day]);\n  let maxDate = useMemo(() => convertValue(maxValue, day), [maxValue, day]);\n\n  let timeValue = useMemo(() => value && 'day' in value ? toTime(value) : value as Time, [value]);\n  let dateTime = useMemo(() => value == null ? null : convertValue(value), [value]);\n  let onChange = newValue => {\n    setValue(day || defaultValueTimeZone ? newValue : newValue && toTime(newValue));\n  };\n\n  let state = useDateFieldState({\n    ...props,\n    value: dateTime,\n    defaultValue: undefined,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange,\n    granularity: granularity || 'minute',\n    maxGranularity: 'hour',\n    placeholderValue: placeholderDate,\n    // Calendar should not matter for time fields.\n    createCalendar: () => new GregorianCalendar()\n  });\n\n  return {\n    ...state,\n    timeValue\n  };\n}\n\nfunction convertValue(value: TimeValue, date: DateValue = today(getLocalTimeZone())) {\n  if (!value) {\n    return null;\n  }\n\n  if ('day' in value) {\n    return value;\n  }\n\n  return toCalendarDateTime(date, value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}