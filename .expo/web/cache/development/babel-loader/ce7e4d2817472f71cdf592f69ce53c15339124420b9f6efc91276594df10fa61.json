{"ast":null,"code":"import { useId } from '@react-aria/utils';\nexport function useMenuSection(props) {\n  var heading = props.heading,\n    accessibilityLabel = props.accessibilityLabel;\n  var headingId = useId();\n  return {\n    itemProps: {\n      accessibilityRole: 'presentation'\n    },\n    headingProps: heading ? {\n      'nativeID': headingId,\n      'aria-hidden': true,\n      'accessibilityHidden': true\n    } : {},\n    groupProps: {\n      'accessibilityRole': 'group',\n      accessibilityLabel: accessibilityLabel,\n      'aria-labelledby': heading ? headingId : undefined,\n      'accessibilityLabelledBy': heading ? headingId : undefined\n    }\n  };\n}","map":{"version":3,"names":["useId","useMenuSection","props","heading","accessibilityLabel","headingId","itemProps","accessibilityRole","headingProps","groupProps","undefined"],"sources":["C:\\Users\\ryann\\OneDrive\\√Årea de Trabalho\\pdm\\my-app\\node_modules\\@react-native-aria\\menu\\lib\\module\\useMenuSection.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport { useId } from '@react-aria/utils';\n\ninterface AriaMenuSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode;\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  accessibilityLabel?: string;\n}\n\ninterface MenuSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: any;\n\n  /** Props for the heading element, if any. */\n  headingProps: any;\n\n  /** Props for the group element. */\n  groupProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the section.\n */\nexport function useMenuSection(props: AriaMenuSectionProps): MenuSectionAria {\n  let { heading, accessibilityLabel } = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      //@ts-ignore\n      accessibilityRole: 'presentation',\n    },\n    headingProps: heading\n      ? {\n          // Techincally, menus cannot contain headings according to ARIA.\n          // We hide the heading from assistive technology, and only use it\n          // as a label for the nested group.\n          'nativeID': headingId,\n          // RN Web < 0.14\n          'aria-hidden': true,\n          // RN Web >= 0.15\n          'accessibilityHidden': true,\n        }\n      : {},\n    groupProps: {\n      'accessibilityRole': 'group',\n      accessibilityLabel,\n      // RN Web < 0.14\n      'aria-labelledby': heading ? headingId : undefined,\n      // RN Web >= 0.15\n      'accessibilityLabelledBy': heading ? headingId : undefined,\n    },\n  };\n}\n"],"mappings":"AACA,SAASA,KAAT,QAAsB,mBAAtB;AAyBA,OAAO,SAASC,cAATA,CAAwBC,KAAxB,EAAsE;EAC3E,IAAMC,OAAF,GAAkCD,KAAtC,CAAMC,OAAF;IAAWC,kBAAA,GAAuBF,KAAtC,CAAeE,kBAAA;EACf,IAAIC,SAAS,GAAGL,KAAK,EAArB;EAEA,OAAO;IACLM,SAAS,EAAE;MAETC,iBAAiB,EAAE;IAFV,CADN;IAKLC,YAAY,EAAEL,OAAO,GACjB;MAIE,YAAYE,SAJd;MAME,eAAe,IANjB;MAQE,uBAAuB;IARzB,CADiB,GAWjB,EAhBC;IAiBLI,UAAU,EAAE;MACV,qBAAqB,OADX;MAEVL,kBAFU,EAEVA,kBAFU;MAIV,mBAAmBD,OAAO,GAAGE,SAAH,GAAeK,SAJ/B;MAMV,2BAA2BP,OAAO,GAAGE,SAAH,GAAeK;IANvC;EAjBP,CAAP;AA0BD"},"metadata":{},"sourceType":"module","externalDependencies":[]}